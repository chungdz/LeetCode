/*
三数之和
给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

 

示例：

给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]
*/
#include <vector>
using namespace std;


/*
解法一：

给原数组排序

如果有0，判断0的数量是否>=3，如果是返回0,0,0

将数组分为<0和>=0两部分

用另一边的组合的和找这一边的负数（二分），看存不存在，存在就返回对应位置

或者是直接用字典存储值和位置二元键值对
*/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {

    }
};